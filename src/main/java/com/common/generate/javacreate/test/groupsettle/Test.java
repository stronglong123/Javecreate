package com.common.generate.javacreate.test.groupsettle;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.common.generate.javacreate.test.groupsettle.dto.ErpProductOwnerDTO;
import com.common.generate.javacreate.utils.FileUtil;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @author xialei
 * @date 2021/5/1 20:40
 */
public class Test {

    public static void main(String[] args) {
//        getskuspec();
        getOwnerText();
    }


    public static void getOwnerText() {
        String text = "1395869718239484800\ta3e53844a1f54f0da95fe5d6602c9dec\t\n" +
                "1395869718239554799\t0de1086f242645d6aa1ac0c083921164\t\n" +
                "1395869718239554813\t0e055b55fd2c4a26953c38aae1b47ab8\t\n" +
                "1395869718239555170\t114f5b8e-bbf3-4bdc-b18a-39a066f35d9e\t\n" +
                "1395869718239555913\t17cdc9f87ba042b490446fcdbb8410fe\t\n" +
                "1395869718239556213\t1b06db64-94b3-40e4-a266-db143e1de5b8\t\n" +
                "1395869718239556501\t1dd0731e-7fc5-4f8b-8d80-04e1b1ee2497\t\n" +
                "1395869718239557598\t279fd6b0-23f2-4bb9-9210-a93bad3c124a\t\n" +
                "1395869718239558126\t2cbf573a869f49a6af499f304ac478b3\t\n" +
                "1395869718239559217\t3728c408fb8247119e94a63b53d2e569\t\n" +
                "1395869718239559358\t38c4b9f095584b1ab50b4f0f0109390d\t\n" +
                "1395869718239559973\t3ea18a3f-2bff-446b-835f-b04d45af6430\t\n" +
                "1395869718239560316\t426eed14912b46c7b9ba1ea98cccd570\t\n" +
                "1395869718239560661\t45fb777184c049d5b3488eb512a7cb01\t\n" +
                "1395869718239560810\t4636688667040385438\t\n" +
                "1395869718239560885\t4648997249216838872\t\n" +
                "1395869718239562121\t4850638694540769830\t\n" +
                "1395869718239562858\t4969d9c7716b4fe899f1a269aa0a8b75\t\n" +
                "1395869718239565545\t5288886726429904645\t\n" +
                "1395869718239566961\t5514797014832478806\t\n" +
                "1395869718239570650\t6b6e3da2af70434baaf0fa590d05cb34\t\n" +
                "1395869718239572697\t7fd131b1-e44e-44c5-bd69-f86da3f41918\t\n" +
                "1395869718239572802\t80c4d33c0d534409ae93c240ca5054b0\t\n" +
                "1395869718239572856\t813d8ab0cec1463fa51d6f63bccd630c\t\n" +
                "1395869718239574801\t93c7b1a0ab654e27bc6a8e79e48668fc\t\n" +
                "1395869718239575738\t9d7a13f971cc44bbac19a3eff058dd64\t\n" +
                "1395869718239577405\taea59e72551d471e851fc57dcd18eb6d\t\n" +
                "1395869718239577894\tb3c927c89b104727adebdf6471dcbe5e\t\n" +
                "1395869718239578390\tb955b7800462455f962d229f3e69a541\t\n" +
                "1395869718239578519\tbaaa06af26a449e4ad5624fb52d5bfb8\t\n" +
                "1395869718239578904\tbe8fac22568848738d1f9b6574aed665\t\n" +
                "1395869718239579016\tbf96324f-0970-43ea-9195-be42f749f06d\t\n" +
                "1395869718239579537\tc50646155dc844049b2b149f6f9859d9\t\n" +
                "1395869718239580616\tcfa3d832-b4e5-40bf-b23f-8094ecb14ad5\t\n" +
                "1395869718239580648\tcfe9fef8224142a6ad06e30213602919\t\n" +
                "1395869718239580887\td21eec12d283487aa28f727e59571f5e\t\n" +
                "1395869718239581126\td46b6528-eab9-41e0-8e7d-9ba1ea729e15\t\n" +
                "1395869718239582117\tdeebadbe53914af5b8296d04ead5bc88\t\n" +
                "1395869718239582339\te12548f1af684fa7a005e020e08bc5a6\t\n" +
                "1395869718239583632\tee4638ade92f4c91accdbbc7f7316651\t\n" +
                "1395869718239583879\tf0af06d5-9b7c-4c1b-8e22-a8bad2a0e4f6\t\n" +
                "1395869718239584956\tfad8cea56966465fb315db343ab1f0e9\t\n" +
                "1395869718239585292\tfe85649fdfdb4ec3967cfdf082553033\t\n" +
                "1395869718301599312\te5ca427434a94db3a0885ea6aa6d15b6\t\n" +
                "1395869718303774358\td9651d4f7029498b9a793a1a6476a634\t\n" +
                "1395869718313611734\tc8c12cab33a145bc9baeca9a596e7682\t\n" +
                "1395869718321160276\t01669ca225d940b28aff6cf32ad696c2\t\n" +
                "1395869718366982229\t9a532f99-4a6f-487e-901d-9e0be5a62324\t\n" +
                "1395869718380466686\t6d09498e-3154-4d25-9ed0-f37011622fe1\t\n";

        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Map<String,String> map =new HashMap<>();");
        Map<String, String> map = new HashMap<>();
        map.put("", "");
        String[] splitList = text.split("\t\n");
        for (String splitText : splitList) {
            ErpProductOwnerDTO ownerDTO = new ErpProductOwnerDTO();
            String[] split = splitText.split("\t");
            stringBuilder.append("map.put(\"").append(split[0]).append("\",\"").append(split[1]).append("\");");
        }
        System.out.println(stringBuilder.toString());

    }


    public static void getSkuText() {
        String text = "10300001188290\t美汁源果粒橙1.25L（1*12）\t1188\t\n" +
                "10300001198659\t怡宝水555ml （1*24）\t1198\t\n" +
                "10300001541851\t统一绿茶1L（1*8）\t1541\t\n" +
                "10300001817353\t百事可乐1L（1*12）\t1817\t\n" +
                "10300002257379\t红牛250ml（1*24）\t2257\t\n" +
                "10300034772186\t黄鹤楼升级版15年42度500ml（1*6）\t34772\t\n" +
                "11400151112789\t乌苏（红）啤酒【瓶】纸箱装11度620ml（1*12）\t151112\t\n" +
                "11900002257872\t红牛250ml（1*24）\t2257\t\n" +
                "11900003173415\t乐虎380ml（1*15）\t3173\t\n" +
                "11900107485366\t水润坊能量100牛磺酸强化型维生素饮料600ml（1*15）\t107485\t\n" +
                "15900000947637\t青岛清爽[听]8度330ml（1*24）\t947\t\n" +
                "15900001543515\t脉动水蜜桃口味600ml（1*15）\t1543\t\n" +
                "15900001555063\t百事可乐[瓶]600ml（1*24）\t1555\t\n" +
                "15900001698710\t百岁山饮用天然矿泉水570ml（1*24）\t1698\t\n" +
                "15900002112802\t雀巢咖啡丝滑拿铁268ml（1*15）\t2112\t\n" +
                "15900002494978\t怡宝纯净水1.555L（1*12）\t2494\t\n" +
                "15900003107231\t百事可乐2L（1*6）\t3107\t\n" +
                "15900004804715\t银鹭桂圆莲子八宝粥360g（1*12）\t4804\t\n" +
                "16800001198513\t怡宝水555ml （1*24）\t1198\t\n" +
                "16800001550060\t百事可乐[瓶]500ml（1*24）\t1550\t\n" +
                "16800005831135\t维他奶原味豆奶【盒】250ml（1*24）\t5831\t\n" +
                "16800054414485\t统一阿萨姆原味奶茶新装500ml（1*15）\t54414\t\n" +
                "40000000274708\t汾酒光瓶53度475ml（1*12）\t274\t\n" +
                "40000000311338\t牛栏山陈酿42度500ml（1*12）\t311\t\n" +
                "40000000314758\t古越龙山清醇三年500ml\t314\t\n" +
                "40000001188672\t美汁源果粒橙1.25L（1*12）\t1188\t\n" +
                "40000001542800\t脉动青柠口味600ml（1*15）\t1542\t\n" +
                "40000001548114\t雪碧【瓶】500ml（1*24）\t1548\t\n" +
                "40000002057402\t王老吉（听装）310ml（1*24）\t2057\t\n" +
                "40000002112159\t雀巢咖啡丝滑拿铁268ml（1*15）\t2112\t\n" +
                "40000002257189\t红牛250ml（1*24）\t2257\t\n" +
                "40000003839768\t美汁源果粒橙1.8L（1*6）\t3839\t\n" +
                "40000004919492\t蒙牛特仑苏（纯牛奶）250ml（1*12）\t4919\t\n" +
                "40000007147440\t康师傅红烧牛肉面108g（1*12）\t7147\t\n" +
                "40000008122805\t冰露饮用纯净水550ml（1*24）\t8122\t\n" +
                "40000011177290\t康师傅香辣牛肉面桶装108g（1*12）\t11177\t\n" +
                "40000025226449\t今麦郎软化纯净水550ml（1*24）\t25226\t\n" +
                "40000031358303\t七度空间（QUC8110）优雅系列卫生巾空气感日用丝柔超薄（10片）245mm\t31358\t\n" +
                "40000125367050\t美汁源果粒橙420ml（1*12）\t125367\t\n" +
                "40200001185134\t可口可乐2L（1*6）\t1185\t\n" +
                "40200001196309\t农夫山泉550ml（1*24）\t1196\t\n" +
                "40200151112433\t乌苏（红）啤酒【瓶】纸箱装11度620ml（1*12）\t151112\t\n" +
                "40200191003138\t加多宝（瓶装）550ml（1*15）\t191003\t\n" +
                "40300001789506\t可口可乐[听]330ml（1*24）\t1789\t\n" +
                "40300031652437\t可口可乐畅爽装680ml（1*12）\t31652\t\n" +
                "40400001083802\t东北坊珍酿六年45度450ml\t1083\t\n" +
                "40400003532053\t和酒金色年华6年（红箱）9度500ml\t3532\t\n" +
                "40400004804436\t银鹭桂圆莲子八宝粥360g（1*12）\t4804\t\n" +
                "40500001542870\t脉动青柠口味600ml（1*15）\t1542\t\n" +
                "40500001543931\t脉动水蜜桃口味600ml（1*15）\t1543\t\n" +
                "40500001732374\t椰树椰汁1L（1*12）\t1732\t\n" +
                "40500047275913\t百威啤酒9.7度【听】500ml（1*12）\t47275\t\n" +
                "40600007145129\t统一来一桶老坛酸菜牛肉面香辣味120g（1*12）\t7145\t\n" +
                "40600007322579\t金龙鱼黄金比例食用调和油5L（1*4）\t7322\t\n" +
                "40600060789141\t稻花香过桥米线酸辣牛肉味110g（1*12）\t60789\t\n" +
                "41200001188935\t美汁源果粒橙1.25L（1*12）\t1188\t\n" +
                "41200001547655\t雪碧【听装】330ml（1*24）\t1547\t\n" +
                "41200001548573\t雪碧【瓶】500ml（1*24）\t1548\t\n" +
                "41200003107709\t百事可乐2L（1*6）\t3107\t\n" +
                "41200003839759\t美汁源果粒橙1.8L（1*6）\t3839\t\n" +
                "41200011226417\t古井淡雅42度450ml（1*4）\t11226\t\n" +
                "41900001570554\t加多宝新装[听]310ml（1*24）\t1570\t\n" +
                "42100001548502\t雪碧【瓶】500ml（1*24）\t1548\t\n" +
                "42100001740974\t芬达橙味汽水500ml（1*24）\t1740\t\n" +
                "46500004120239\t蒙牛纯牛奶（盒装）250ml（1*24）\t4120\t\n" +
                "47300004857769\t女儿红绍兴老酒桶装黄酒14度2.5L\t4857\t\n" +
                "47300005371601\t老村长富贵酒42度450ml\t5371\t\n" +
                "70400003872819\t伊利优酸乳原味250ml（1*24）\t3872\t\n" +
                "70400058662050\t太原高粱白【升级版】42度450ml（1*12）\t58662\t\n" +
                "71100009754035\t秋林格瓦斯350ml（1*12）\t9754\t\n" +
                "71100045702871\t立白新金桔洗洁精1kg+120g（1*10）\t45702\t\n" +
                "71100083356891\t雕牌全效加浓洗洁精1.5kg\t83356\t\n" +
                "72100000561291\t哈尔滨小麦王【听】10度330ml（1*24）\t561\t\n" +
                "72300000734167\t汾酒玻璃瓶42度475ml\t734\t\n" +
                "72300064063536\t雅鲁河高粱原浆42度500ml（1*6）\t64063\t\n" +
                "4772133343308590227\t农夫山泉维他命水柑橘风味（力量帝）500ml（1*15）\t29222\t\n" +
                "4776428017752634507\t农夫山泉550ml（1*24）\t1196\t\n" +
                "4777582275521374212\t维他柠檬茶饮料【瓶】500ml（1*15）\t278888\t\n" +
                "4792681681467797833\t中盐精制加碘盐500g（1*40）\t308897\t\n" +
                "4798125746493601992\t金沙河刀削原味面片200g（1*25）\t48025\t\n" +
                "4810048808338993613\t绵柔尖庄（红）42度500ml（1*4）\t334557\t\n" +
                "4837683092788004680\t康师傅矿物质水500ml（1*28）\t270849\t\n" +
                "4841638631619101918\t可口可乐零度汽水680ml（1*12）\t247343\t\n" +
                "4843976557031033624\t银鹭桂圆八宝粥360g（1*12）\t112022\t\n" +
                "4856422847213753558\t夏宝牛牛菊花植物饮料250ml（1*24）\t382026\t\n" +
                "4858349024854966668\t燕京U8啤酒8度500ml（1*12）\t333218\t\n" +
                "4863407525556840346\t多力葵花籽油5.68L（1*4）\t19914\t\n" +
                "4864434714945576796\t旺仔牛奶8罐*245ml+旺旺O泡果奶原味4罐*245ml\t381180\t\n" +
                "4867681516293513043\t康师傅包装饮用水[瓶]550ml（1*28）\t370265\t\n" +
                "4906403955730592475\t贵宾歪脖小郎酒45度100ml\t238\t\n" +
                "4911289754947203800\t娃哈哈饮用天然矿泉水4.5L（1*4）\t277444";
        List<ErpProductOwnerDTO> list = new ArrayList<>();
        String[] splitList = text.split("\t\n");
        for (String splitText : splitList) {
            ErpProductOwnerDTO ownerDTO = new ErpProductOwnerDTO();
            String[] split = splitText.split("\t");
            ownerDTO.setProductSkuId(Long.valueOf(split[0]));
            ownerDTO.setProductName(split[1]);
            ownerDTO.setSpecId(Long.valueOf(split[2]));
            list.add(ownerDTO);
        }
        System.out.println(JSON.toJSONString(list));
    }
    
    
    
    public static  void   getWarehouse(){

        String text = FileUtil.readFileByLines("C:\\Users\\Administrator\\Desktop\\warehouse.json");
        Map<Object,Object> map =new HashMap<>();
        List<Object> list = JSON.parseArray(text, Object.class);
        for (Object o : list) {
            JSONObject jsonObject = (JSONObject) o;
            Object saleWarehouseId = jsonObject.get("saleWarehouseId");
            Object warehouseName = jsonObject.get("warehouseName");
            map.put(saleWarehouseId,warehouseName);
        }

        System.out.println(JSON.toJSONString(map));

    }



    public static void getskuspec() {
        String text = "10300001188290\t1188\t\n" +
                "10300001198659\t1198\t\n" +
                "10300001541851\t1541\t\n" +
                "10300001817353\t1817\t\n" +
                "10300002039168\t2039\t\n" +
                "10300002057249\t2057\t\n" +
                "10300002257379\t2257\t\n" +
                "10300034772186\t34772\t\n" +
                "10300036093825\t36093\t\n" +
                "10300039764286\t39764\t\n" +
                "10300058592849\t58592\t\n" +
                "11400151112789\t151112\t\n" +
                "11800001627349\t1627\t\n" +
                "11900001544369\t1544\t\n" +
                "11900002257872\t2257\t\n" +
                "11900003173415\t3173\t\n" +
                "11900107485366\t107485\t\n" +
                "15900000947637\t947\t\n" +
                "15900001542822\t1542\t\n" +
                "15900001543515\t1543\t\n" +
                "15900001545525\t1545\t\n" +
                "15900001555063\t1555\t\n" +
                "15900001570200\t1570\t\n" +
                "15900001571045\t1571\t\n" +
                "15900001698710\t1698\t\n" +
                "15900002112802\t2112\t\n" +
                "15900002257896\t2257\t\n" +
                "15900002387732\t2387\t\n" +
                "15900002494978\t2494\t\n" +
                "15900003107231\t3107\t\n" +
                "15900004100919\t4100\t\n" +
                "15900004804715\t4804\t\n" +
                "15900020284900\t20284\t\n" +
                "15900039764356\t39764\t\n" +
                "15900042053339\t42053\t\n" +
                "15900137139844\t137139\t\n" +
                "15900139449334\t139449\t\n" +
                "16800001198513\t1198\t\n" +
                "16800001550060\t1550\t\n" +
                "16800001556914\t1556\t\n" +
                "16800002494787\t2494\t\n" +
                "16800005831135\t5831\t\n" +
                "16800009707763\t9707\t\n" +
                "16800054414485\t54414\t\n" +
                "16800149552175\t149552\t\n" +
                "40000000274708\t274\t\n" +
                "40000000311338\t311\t\n" +
                "40000000314758\t314\t\n" +
                "40000000327603\t327\t\n" +
                "40000000345936\t345\t\n" +
                "40000001188672\t1188\t\n" +
                "40000001542800\t1542\t\n" +
                "40000001548114\t1548\t\n" +
                "40000002057402\t2057\t\n" +
                "40000002112159\t2112\t\n" +
                "40000002257189\t2257\t\n" +
                "40000003839768\t3839\t\n" +
                "40000004919492\t4919\t\n" +
                "40000007147440\t7147\t\n" +
                "40000008122805\t8122\t\n" +
                "40000011177290\t11177\t\n" +
                "40000011879564\t11879\t\n" +
                "40000014126194\t14126\t\n" +
                "40000025226449\t25226\t\n" +
                "40000031358303\t31358\t\n" +
                "40000035095723\t35095\t\n" +
                "40000125367050\t125367\t\n" +
                "40200000720852\t720\t\n" +
                "40200001185134\t1185\t\n" +
                "40200001186081\t1186\t\n" +
                "40200001196309\t1196\t\n" +
                "40200002039377\t2039\t\n" +
                "40200006699081\t6699\t\n" +
                "40200017931599\t17931\t\n" +
                "40200068373569\t68373\t\n" +
                "40200151112433\t151112\t\n" +
                "40200191003138\t191003\t\n" +
                "40300001789506\t1789\t\n" +
                "40300002175530\t2175\t\n" +
                "40300031652437\t31652\t\n" +
                "40400001083802\t1083\t\n" +
                "40400003532053\t3532\t\n" +
                "40400003801709\t3801\t\n" +
                "40400004804436\t4804\t\n" +
                "40400081238512\t81238\t\n" +
                "40400118324793\t118324\t\n" +
                "40500001542870\t1542\t\n" +
                "40500001543931\t1543\t\n" +
                "40500001732374\t1732\t\n" +
                "40500004903862\t4903\t\n" +
                "40500007324285\t7324\t\n" +
                "40500045918380\t45918\t\n" +
                "40500047275913\t47275\t\n" +
                "40600007145129\t7145\t\n" +
                "40600007322579\t7322\t\n" +
                "40600060789141\t60789\t\n" +
                "41200001188935\t1188\t\n" +
                "41200001547655\t1547\t\n" +
                "41200001548573\t1548\t\n" +
                "41200003107709\t3107\t\n" +
                "41200003839759\t3839\t\n" +
                "41200005460591\t5460\t\n" +
                "41200011226417\t11226\t\n" +
                "41900001570554\t1570\t\n" +
                "42100001548502\t1548\t\n" +
                "42100001740974\t1740\t\n" +
                "42100003896749\t3896\t\n" +
                "42100125367541\t125367\t\n" +
                "45700001732122\t1732\t\n" +
                "45700002112726\t2112\t\n" +
                "45700004041800\t4041\t\n" +
                "45700006670766\t6670\t\n" +
                "45700007322813\t7322\t\n" +
                "45700151112247\t151112\t\n" +
                "45700157424090\t157424\t\n" +
                "45700163299992\t163299\t\n" +
                "45700212349819\t212349\t\n" +
                "46500004120239\t4120\t\n" +
                "47300000314832\t314\t\n" +
                "47300004857769\t4857\t\n" +
                "47300005371601\t5371\t\n" +
                "70400003872819\t3872\t\n" +
                "70400004179551\t4179\t\n" +
                "70400058662050\t58662\t\n" +
                "71100001542278\t1542\t\n" +
                "71100001698972\t1698\t\n" +
                "71100001840110\t1840\t\n" +
                "71100006808431\t6808\t\n" +
                "71100008402891\t8402\t\n" +
                "71100009754035\t9754\t\n" +
                "71100014942681\t14942\t\n" +
                "71100038136458\t38136\t\n" +
                "71100045702871\t45702\t\n" +
                "71100083356891\t83356\t\n" +
                "71100138217725\t138217\t\n" +
                "71300001542537\t1542\t\n" +
                "71300002112740\t2112\t\n" +
                "71300005114385\t5114\t\n" +
                "71300006822427\t6822\t\n" +
                "71300007147815\t7147\t\n" +
                "71300015054397\t15054\t\n" +
                "71300016910015\t16910\t\n" +
                "71300018633970\t18633\t\n" +
                "71300020838857\t20838\t\n" +
                "71300033306951\t33306\t\n" +
                "71300065961108\t65961\t\n" +
                "71300107485940\t107485\t\n" +
                "71300124860465\t124860\t\n" +
                "71300125507884\t125507\t\n" +
                "72100000561291\t561\t\n" +
                "72100001474154\t1474\t\n" +
                "72100001543776\t1543\t\n" +
                "72100001544098\t1544\t\n" +
                "72100002257860\t2257\t\n" +
                "72100064063802\t64063\t\n" +
                "72100092246781\t92246\t\n" +
                "72100095772710\t95772\t\n" +
                "72300000734167\t734\t\n" +
                "72300064063536\t64063\t\n" +
                "4762809650397956061\t151112\t\n" +
                "4772133343308590227\t29222\t\n" +
                "4776428017752634507\t1196\t\n" +
                "4777195708915083281\t278888\t\n" +
                "4777582275521374212\t278888\t\n" +
                "4782934981700893586\t295901\t\n" +
                "4792681681467797833\t308897\t\n" +
                "4798125746493601992\t48025\t\n" +
                "4810048808338993613\t334557\t\n" +
                "4811593850524995407\t328354\t\n" +
                "4831457167568415948\t358440\t\n" +
                "4837683092788004680\t270849\t\n" +
                "4841638631619101918\t247343\t\n" +
                "4843976231850838792\t1184\t\n" +
                "4843976557031033624\t112022\t\n" +
                "4846769685230200662\t352504\t\n" +
                "4850031898749511489\t325534\t\n" +
                "4851462338656020312\t377300\t\n" +
                "4856114310375047578\t381758\t\n" +
                "4856422847213753558\t382026\t\n" +
                "4858349024854966668\t333218\t\n" +
                "4863407525556840346\t19914\t\n" +
                "4864434714945576796\t381180\t\n" +
                "4865617929370338499\t365384\t\n" +
                "4867681516293513043\t370265\t\n" +
                "4868120068898424027\t393405\t\n" +
                "4868120080000746717\t393405\t\n" +
                "4868120080311125195\t393405\t\n" +
                "4868120092218754255\t393405\t\n" +
                "4868120093263135965\t393405\t\n" +
                "4870215270593201360\t12305\t\n" +
                "4874307702317552080\t398457\t\n" +
                "4878295444626545290\t400795\t\n" +
                "4882236137363548800\t95772\t\n" +
                "4883722298632890510\t404942\t\n" +
                "4898229268965576593\t413057\t\n" +
                "4898913301915586445\t324568\t\n" +
                "4899573888009806981\t1612\t\n" +
                "4902119644662319944\t417014\t\n" +
                "4903302845124561758\t6021\t\n" +
                "4904313684237470530\t406889\t\n" +
                "4906403955730592475\t238\t\n" +
                "4911289297360599187\t74902\t\n" +
                "4911289754947203800\t277444\t\n" +
                "4913792322898277086\t430646\t\n" +
                "4914220663409259211\t412059\t\n" +
                "4914829746021642965\t432168\t\n" +
                "4914829890263136385\t432169\t\n" +
                "4914905203882014871\t427887\t\n" +
                "4916246574359063435\t433349\t\n" +
                "4916350124036664198\t433739\t\n" +
                "4916350515008711581\t433670";

        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Map<Long,Long> map =new HashMap<>();");
        Map<String, String> map = new HashMap<>();
        map.put("", "");
        String[] splitList = text.split("\t\n");
        for (String splitText : splitList) {
            ErpProductOwnerDTO ownerDTO = new ErpProductOwnerDTO();
            String[] split = splitText.split("\t");
            stringBuilder.append("map.put(").append(split[0]).append("L,").append(split[1]).append("L);");
        }
        System.out.println(stringBuilder.toString());

    }


}
